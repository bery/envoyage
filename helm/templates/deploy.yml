apiVersion: apps/v1
kind: Deployment
metadata:
  name: envoyage
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      app: envoyage
  template:
    metadata:
      labels:
        app: envoyage
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/external-secret.yml") . | sha256sum }}
    spec:
      {{ if .Values.serviceAccount.create }}
      serviceAccountName: {{ .Chart.Name }}
      {{ else }}
      serviceAccountName: default
      {{ end }}
      containers:
      - name: app
        image: {{ .Values.image }}
        imagePullPolicy: Always
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop: [ALL]
          seccompProfile:
            type: RuntimeDefault
          procMount: Default
          readOnlyRootFilesystem: true
        ports:
        - containerPort: 8000
        - containerPort: 8001
        resources:
          limits:
            cpu: 50m
            memory: 64Mi
        livenessProbe:
          httpGet:
            path: /check/live
            port: 8000
          initialDelaySeconds: 10
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /check/ready
            port: 8000
          initialDelaySeconds: 5
          periodSeconds: 5
          successThreshold: 1
          failureThreshold: 3
        startupProbe:
          httpGet:
            path: /check/ready
            port: 8000
            scheme: HTTP
          failureThreshold: 5
          periodSeconds: 5
          successThreshold: 1
        lifecycle:
          # postStart:
          #   exec:
          #     command: ["sh", "-c", "date > /tmp/started"]
          preStop:
            httpGet:
              path: "/action/terminate"
              port: 8001
        env:
        - name: AWS_REGION
          value: {{ .Values.aws.region }}
        - name: MALWARE_URL
          value: {{ .Values.malware.url }}
        - name: REDIS_SERVER
          value: redis-master:6379
        - name: ARGO_REDIS_ADDRESS
          value: {{ .Values.argo.redisAddress }}
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: HOST_IP
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        {{ if and .Values.externalSecrets.enabled (not .Values.serviceAccount.create) }}
        - name: AWS_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              name: envoyage-aws-credentials
              key: aws-access-key-id
        - name: AWS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: envoyage-aws-credentials
              key: aws-secret-access-key
        {{ end }}
